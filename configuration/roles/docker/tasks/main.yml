---
# This playbook will install and configure docker and docker-compose

- name: Install dependencies for docker
  yum:
    name: "{{ packages }}"
  vars:
    packages:
    - yum-utils
    - device-mapper-persistent-data
    - lvm2
    - curl

- name: Add docker repository
  get_url:
    url: "{{ centos_docker_ce_repository }}"
    dest: /etc/yum.repos.d/docker-ce.repo

- name: Check if containerd.io package is installed
  yum:
    list: "{{ containerd_package }}"
  register: containerd

- name: Install containerd.io package
  yum:
    name: "{{ containerd_package_repository }}"
    state: present
  when: containerd.results[0].yumstate != 'installed'

- name: Install docker packages
  yum:
    name: "{{ packages }}"
  vars:
    packages:
    - docker-ce
    - docker-ce-cli

- name: Add devops user to docker group
  user:
    name: "{{ devops_user }}"
    groups: docker
    append: yes

- name: Set docker to start on boot
  systemd:
    name: docker
    enabled: yes
    masked: no

- name: Start docker service
  service:
    name: docker
    state: started

- name: Install epel repository
  yum:
    name: epel-release
    
- name: Install python3 and pip3 dependency
  yum:
    name: python3
    state: latest

- name: Install pip docker
  pip:
    name: docker
    executable: "{{ pip_executable }}"
    state: latest

- stat:
    path: /usr/local/bin/docker-compose
  register: dockercompose

- name: Install docker-compose
  get_url:
    url: "{{ docker_compose_package_repository }}"
    dest: /usr/local/bin/docker-compose
  when: dockercompose.stat.exists == false

- name: Changing perm of docker-compose, adding "+x"
  file: dest=/usr/local/bin/docker-compose mode=a+x